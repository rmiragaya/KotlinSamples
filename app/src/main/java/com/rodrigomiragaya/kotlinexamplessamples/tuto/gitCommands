git init (inicia el git en el proyecto, crea el repo local, crea la carpeta .git)
git status (status del git, muestrs branch, archivos modificados)
git status -s (lo mismo pero reducido)
git status -s -b (lo mismo pero tambien muestra la branch)
git add . (agrega toddo al git para que este observando modificaciones)
git add index.html (agrega un archivo especifico)
git commit (hace commit de los archivos previamente agregados al add)
git commit -m "comentario" (agrega un comentario al commit)
git commit -s (firma el commit)
git add *.png (agrega toddos los archivos con extencion png)
git add css/ (agrega toddos los archivos dentro de la carpeta css)
git add -A (agrega toddos los archivos modificados)
git reset *.xml (saca el archivo para que no sea visto por el commit(esto es previo a commitear))
git log --oneline (el log pero solo con el hash y el commentario)
git log --oneline --decorate --all --graph(el log pero solo con el hash y el commentario y mejor decorado y se;alizado)
git diff (muestra los cambios en los archivos)
git diff --staged(muestra los cambios en los archivos que ya estan puestos en el git)

git config --global -l (llista de todos los parametros globales)

git config --global user.email r.miragaya@redlink.com.ar (cambiar mail)
git config --global user.name rodrigo (cambiar name)
git config --global commit.gpgsign true/false (firmar en cada commit con la gpg)


git config --global alias.lg "log --oneline --decorate --all --graph" (es un shortcut para crear en el global de git, y usarlo siempre)

git checkout -- filename (revierte los cambios SOLO en el archivo mencionado)

git reset --soft HEAD^ (Deshace el ultimo commit (si hicimos commt pero nos olvidamos de agregar algo, podemos correr esto y deshace el commit))

git rm --cached <file full path> (Borra un archivo de git pero no del fileSystem)

git rm -r --cached <folder full path> (Borra una carpeta de git pero no del fileSystem) (-r por recursivo)
